{"componentChunkName":"component---src-templates-post-js","path":"/ava-bad/","result":{"data":{"ghostPost":{"id":"Ghost__Post__60ce0b5818c9b5df0d35a610","title":"Ava is no ETH-killer","slug":"ava-bad","featured":false,"feature_image":"https://prestonevans.me/content/images/2021/06/frozen_landscape.jpg","excerpt":"If you're going to build a Dapp, don't do it on Avalanche. ","custom_excerpt":"If you're going to build a Dapp, don't do it on Avalanche. ","visibility":"public","created_at_pretty":"19 June, 2021","published_at_pretty":"21 June, 2021","updated_at_pretty":"24 July, 2021","created_at":"2021-06-19T15:20:56.000+00:00","published_at":"2021-06-21T23:42:09.000+00:00","updated_at":"2021-07-24T18:32:31.000+00:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Preston Evans","slug":"preston","bio":"Just a regular guy from Idaho. I like Hiking, Camping, Fishing, and writing about distributed systems. ","profile_image":"https://prestonevans.me/content/images/2021/06/Social.jpg","twitter":"@prestonevans__","facebook":null,"website":null}],"primary_author":{"name":"Preston Evans","slug":"preston","bio":"Just a regular guy from Idaho. I like Hiking, Camping, Fishing, and writing about distributed systems. ","profile_image":"https://prestonevans.me/content/images/2021/06/Social.jpg","twitter":"@prestonevans__","facebook":null,"website":null},"primary_tag":{"name":"Crypto","slug":"crypto","description":"Cryptocurrencies. For cryptography, see the 'cryptography' tag. There's probably quite a bit of overlap.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Crypto","slug":"crypto","description":"Cryptocurrencies. For cryptography, see the 'cryptography' tag. There's probably quite a bit of overlap.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"If you're building a Dapp today, there can be good reasons to look at launching\non a platforms besides Ethereum. ETH has high fees, it's time to finality is\nlong, and there's MEV to worry about. But if you're going to build a production\nDapp on another platform, please please, don't use Avalanche. \n\nAvalanche has 3 significant shortcomings, any one of which could be enough to\ndoom a platform.\n\n 1. Even in theory, it can't maintain liveness without centralization.\n 2. In practice, it may not even guarantee safety.\n 3. It doesn't solve the state-growth problem.\n\nAlive, in theory\nO(darn)\nAccording to its whitepaper\n[https://assets.website-files.com/5d80307810123f5ffbb34d6e/6009805681b416f34dcae012_Avalanche%20Consensus%20Whitepaper.pdf]\n, Avalanche provides the following guarantee about liveness: \n\n> P3. Liveness (Strong Form). If f ≤ O( √n), then the Snow protocols terminate\nwith high probability (≥ 1−ε) in O(log n) rounds. (Blogger's Note: the \"f\" in\nthis statement refers to the number of adversarial nodes.)\nIn vanilla distributed systems research, this is a perfectly reasonable\nguarantee to provide. Unfortunately, it's not a good guarantee for a\ncryptosystem that wants to be meaningfully decentralized. Why not? I'm so glad\nyou asked! \n\nImagine an Ava network with 25 nodes. According to the whitepaper, that network\ncan tolerate √25 = 5 malicious nodes without experiencing a liveness failure.\nFor the mathematically inclined, that's 20% malicious nodes (or stake, or\nwhatever). That guarantee is significantly worse than the one provided Bitcoin\n(which keeps liveness up to ~51% malicious nodes), but is sort of in the\nballpark of BFT protocols which tolerate 33% byzantine nodes before experiencing\na safety or liveness failure. Unfortunately, the story doesn't end here.\n\n> I've been saying some of this stuff, much more nicely, for years. \n\nThe right substrate for all PoS coins is Avalanche. It's super fast, it scales,\nand it enables tens of thousands to millions of nodes to participate in the\nprotocol. Come check it out. https://t.co/mgbhV1mZtL\n\n— Emin Gün Sirer (@el33th4xor) September 24, 2020\n[https://twitter.com/el33th4xor/status/1309158257055993858?ref_src=twsrc%5Etfw]\nAs Ava scales up, its liveness guarantee gets proportionally worse. At 100\nnodes, an Ava network can only tolerate 10% of its nodes acting maliciously. At\nits current scale (about 1000 nodes), only 3% can be malicious without\njeopardizing liveness. At the \"tens of thousands of nodes\" scale that its\ninventors promise on Twitter\n[https://twitter.com/el33th4xor/status/1309158257055993858], an adversary\ncontrolling even 1% of stake can bring the network to a halt. And, unlike most\nproof-of-stake protocols, Ava doesn't have a mechanism\n[https://twitter.com/el33th4xor/status/1382721311814868996] to identify and\nslash the adversaries. Game over.\n\n> Avalanche does not have slashing. https://t.co/j4GQXYn0Jm\n\n— Emin Gün Sirer (@el33th4xor) April 15, 2021\n[https://twitter.com/el33th4xor/status/1382721311814868996?ref_src=twsrc%5Etfw]\nNon-zero Probability of Success\nBut, as I can already hear the Ava defenders protesting, the whitepaper provides\nanother liveness guarantee: \n\n> P2. Liveness (Upper Bound). Snow protocols terminate with a strictly positive\nprobability within \\(t_max\\) rounds.\nUnfortunately, the statement that an algorithm \"terminates with strictly\npositive probability\" is meaningless as a guarantee about a system's behavior.\nAfter all, the probability that the computer you're reading this on will\nspontaneously re-assemble itself into a sculpture of Satoshi Nakamoto is also\n\"strictly positive\". Non-zero probability of your Dapp working is not a\nguarantee you should be comfortable with. I know it seems like I'm just being\npedantic here. I'm really not trying to be. This is deeply important. \n\nAs the fraction of nodes (or stake, or whatever), controlled by the attacker\nexceeds that  √n upper bound, the performance of Avalanche gets poorer and\npoorer. Exactly how quickly performance degrades is not clear from the\nwhitepaper - it says that the slowdown is polynomial when f exceeds √n but\nbecomes exponential as f approaches \\(\\frac{n}{2}\\) - but even a polynomial\nincrease in communication is really bad.\n\nRemember, we're talking about thousands of nodes here - if each node has to send\nand receive a small polynomial number of messages (say, \\(n^2\\) ), that\ntranslates to millions of messages per decision. That won't work. Even if the\nslowdown is polynomial, a decentralized Ava network is dead in the water. \n\nDanger Close!\nAs it turns out, there's an even more worrying development on the horizon. \nSarah\nJamie Lewis [https://twitter.com/SarahJamieLewis] of Open Privacy recently\npublished (and formally verified) an attack on Snow-family consensus protocols\n[https://git.openprivacy.ca/sarah/formal-verification/raw/branch/master/snowfall.pdf] \nwhich purports to break the safety and liveness guarantees of Ava's underlying\nconsensus algorithm. \n\n> Through probabilistic modelling (sic) we formally verify an adversarial strategy\nthat forces correct nodes to choose between safety and liveness even when f < O(\n√n).\nIf you develop on Avalanche, this should make you really nervous.  Avalanche\nclaims to provide strong guarantees of safety and liveness as long as the\nattacker controls less than √n nodes. If those guarantees can really be broken,\neven in a contrived setup, then there's something wrong with the whitepaper.\nRemember, a single error contaminates the entire security proof. If the Ava\nwhitepaper is 99% correct, it's 100% wrong.\n\nI want to be clear: this doesn't necessarily mean that Ava is not secure. It\nmeans that we don't know whether Ava is secure or not. That's ok - research\ntakes time. But it's not ok to build a production app on a system that might be\nfundamentally broken. Not if there's another option. \n\nTradeoffs: The Good, the Bad, and the Downright Weird\nThis brings me to my final point. When you're designing a complex system, you're\noften forced to accept a tradeoff between two desirable properties. Like all\nblockchain projects, Ava chose a set of tradeoffs that its designers found\ncompelling - it traded away some security guarantees to secure faster consensus.\nBut here's the rub: consensus was never the bottleneck to begin with! The real\nbottleneck in modern blockchains is state growth. \n\nIn Ethereum, each read or write into the database incurs seven or eight random\ndisk accesses (because the database uses a trie structure internally), and each \nstate access incurs seven or eight random database accesses in the course of\ntraversing the state trie. \n\nFor those of you who haven't spent time a lot of optimizing computer programs,\nthat's what we in the business call \"really bad\". Random disk accesses are SLOW.\nIn the time it takes to do a single random read, a CPU might be able perform\n10,000 computations. This is why your full node can take a long time to sync\neven though the CPU is mostly idle. Sync times are typically dominated by disk\naccesses.\n\nBut remember how I said that each database access takes seven or eight writes,\nand each state access takes seven or eight database accesses? It turns out that\nboth of those numbers grow with the size of a blockchain's state. Specifically,\nthey're each about log(s) where S is the state size. So the time it takes to\nprocess a transaction grows with \\(log^2(s)\\). The next time Ethereum state size\ndoubles, the time it takes to process a given transaction will increase by\nroughly 30%. This is why Ethereum keeps the block gas limit low - it needs to\nlimit both block processing times and state growth. \n\nAs long everyone can process every candidate transaction, coming to consensus is\nrelatively easy. There are already dozens of consensus protocols which offer\nfast finality. But if state size grows too quickly, processing transactions on\ncommodity hardware becomes impossible. It's processing blocks that's the\nbottleneck, not coming to consensus. (And in case you were wondering, the\nAvalanche-go client relies on Ethereum's Geth - so all of these limitations\nreally do apply to Ava.)\n\n> The discussion was raised on the context of scaling, people saying that AVAX is\nbetter than Ethereum because it scales. I pointed out that it uses Geth under\nthe hood. From the contextual perspective, you are changing the topic.\n\n— Péter Szilágyi (karalabe.eth) (@peter_szilagyi) February 8, 2021\n[https://twitter.com/peter_szilagyi/status/1358654546646626304?ref_src=twsrc%5Etfw]\nSo, to recap, Ava trades safety and/or liveness guarantees for speed of\nconsensus, but consensus was never the bottleneck. That's like taking the engine\nout of a motorcycle to give it more cargo space. It's not illegal, just... not a\ngood tradeoff. \n\nConclusion: Building on Ava Considered Harmful\nNot everyone wants to build on Ethereum. That's good and healthy. We live in a\nmulti-chain world. But please, for the love of all that is holy, stop treating\nAvalanche like a production system. Ava is a cool distributed systems research\nproject, but it's not a good place to build mission critical applications. Its\nsafety and liveness guarantees are much weaker than those of other projects, and\nit might have a fundamental consensus flaw. Besides, even if it works, it\ndoesn't solve the scaling problem. \n\nAuthor's Note: Did I get some things wrong? Almost certainly. If you find one,\nplease reach out on Twitter. I'm happy to issue corrections or retractions as\nnecessary. \n\nP.S. - To the Folks at Ava Labs\nLike all blockchains, Ava has its share of evangelists  - and that's ok. But \nplease be careful making claims like this\n[https://twitter.com/el33th4xor/status/1316471519640465411] on Twitter. Ava is \nnot live with 49% honest nodes unless you define \"live\" as \"having non-zero -\nbut arbitrarily small - probability of advancing\". At best, you're just going to\nconfuse a lot of newcomers. Ava isn't another IOTA, but this kind of rhetoric is\nhow you would turn it into one. \n\n> I can talk about Avalanche. Avalanche has a parameterizable decision protocol\nthat can withstand huge attackers, even 80%, with safety, but not liveness. It\nrequires 51% honest nodes for liveness and safety together. And its bootstrap\nrequires 51%.\n\n— Emin Gün Sirer (@el33th4xor) October 14, 2020\n[https://twitter.com/el33th4xor/status/1316471519640465411?ref_src=twsrc%5Etfw]","html":"<p>If you're building a Dapp today, there can be good reasons to look at launching on a platforms besides Ethereum. ETH has high fees, it's time to finality is long, and there's MEV to worry about. But if you're going to build a production Dapp on another platform, please <em>please</em>, don't use Avalanche. </p><p>Avalanche has 3 significant shortcomings, any one of which could be enough to doom a platform.</p><ol><li>Even in theory, it can't maintain <strong><em>liveness</em></strong> without centralization.</li><li>In practice, it may not even guarantee <strong><em>safety</em></strong>.</li><li>It doesn't solve the <strong><em>state-growth problem</em></strong>.</li></ol><h2 id=\"alive-in-theory\">Alive, in theory</h2><h3 id=\"odarn\">O(<em>darn</em>)</h3><p>According to its <a href=\"https://assets.website-files.com/5d80307810123f5ffbb34d6e/6009805681b416f34dcae012_Avalanche%20Consensus%20Whitepaper.pdf?ref=127.0.0.1\">whitepaper</a>, Avalanche provides the following guarantee about liveness: </p><blockquote>P3. Liveness (Strong Form). If f ≤ O( √n), then the Snow protocols terminate with high probability (≥ 1−ε) in O(log n) rounds. (Blogger's Note: the <em>\"f\"</em> in this statement refers to the number of adversarial nodes.)</blockquote><p>In vanilla distributed systems research, this is a perfectly reasonable guarantee to provide. Unfortunately, it's not a good guarantee for a cryptosystem that wants to be meaningfully decentralized. Why not? I'm so glad you asked! </p><p>Imagine an Ava network with 25 nodes. According to the whitepaper, that network can tolerate √25 = 5 malicious nodes without experiencing a liveness failure. For the mathematically inclined, that's 20% malicious nodes (or stake, or whatever). That guarantee is <em>significantly</em> worse than the one provided Bitcoin (which keeps liveness up to ~51% malicious nodes), but is sort of in the ballpark of BFT protocols which tolerate 33% byzantine nodes before experiencing a safety or liveness failure. Unfortunately, the story doesn't end here.</p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">I&#39;ve been saying some of this stuff, much more nicely, for years. <br><br>The right substrate for all PoS coins is Avalanche. It&#39;s super fast, it scales, and it enables tens of thousands to millions of nodes to participate in the protocol. Come check it out. <a href=\"https://t.co/mgbhV1mZtL?ref=127.0.0.1\">https://t.co/mgbhV1mZtL</a></p>&mdash; Emin Gün Sirer (@el33th4xor) <a href=\"https://twitter.com/el33th4xor/status/1309158257055993858?ref_src=twsrc%5Etfw&ref=127.0.0.1\">September 24, 2020</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><p>As Ava scales up, its liveness guarantee gets proportionally worse. At 100 nodes, an Ava network can only tolerate 10% of its nodes acting maliciously. At its current scale (about 1000 nodes), only 3% can be malicious without jeopardizing liveness. At the \"tens of thousands of nodes\" scale that its inventors <a href=\"https://twitter.com/el33th4xor/status/1309158257055993858?ref=127.0.0.1\">promise on Twitter</a>, an adversary controlling even 1% of stake can bring the network to a halt. And, unlike most proof-of-stake protocols, <a href=\"https://twitter.com/el33th4xor/status/1382721311814868996?ref=127.0.0.1\">Ava doesn't have a mechanism</a> to identify and slash the adversaries. Game over.</p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Avalanche does not have slashing. <a href=\"https://t.co/j4GQXYn0Jm?ref=127.0.0.1\">https://t.co/j4GQXYn0Jm</a></p>&mdash; Emin Gün Sirer (@el33th4xor) <a href=\"https://twitter.com/el33th4xor/status/1382721311814868996?ref_src=twsrc%5Etfw&ref=127.0.0.1\">April 15, 2021</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><h3 id=\"non-zero-probability-of-success\">Non-zero Probability of Success</h3><p>But, as I can already hear the Ava defenders protesting, the whitepaper provides another liveness guarantee: </p><blockquote>P2. Liveness (Upper Bound). Snow protocols terminate with a strictly positive probability within \\(t_max\\) rounds.</blockquote><p>Unfortunately, the statement that an algorithm \"terminates with strictly positive probability\" is meaningless as a guarantee about a system's behavior. After all, the probability that the computer you're reading this on will spontaneously re-assemble itself into a sculpture of Satoshi Nakamoto is also \"strictly positive\". Non-zero probability of your Dapp working is not a guarantee you should be comfortable with. I know it seems like I'm just being pedantic here. I'm really not trying to be. This is deeply important. </p><p>As the fraction of nodes (or stake, or whatever), controlled by the attacker exceeds that  √n upper bound, the performance of Avalanche gets poorer and poorer. Exactly how quickly performance degrades is not clear from the whitepaper - it says that the slowdown is polynomial when <em>f</em> exceeds √n but becomes exponential as <em>f</em> approaches \\(\\frac{n}{2}\\) - but even a polynomial increase in communication is really bad.  </p><p>Remember, we're talking about thousands of nodes here - if each node has to send and receive a small polynomial number of messages (say, \\(n^2\\) ), that translates to <em><strong>millions</strong></em> of messages <em><strong>per decision</strong></em>. That won't work. Even if the slowdown is polynomial, a decentralized Ava network is dead in the water. </p><h2 id=\"danger-close\">Danger Close!</h2><p>As it turns out, there's an even more worrying development on the horizon. <a href=\"https://twitter.com/SarahJamieLewis?ref=127.0.0.1\">Sarah Jamie Lewis</a> of Open Privacy recently published (and formally verified) <a href=\"https://git.openprivacy.ca/sarah/formal-verification/raw/branch/master/snowfall.pdf?ref=127.0.0.1\">an attack on Snow-family consensus protocols</a> which purports to break the safety and liveness guarantees of Ava's underlying consensus algorithm. </p><blockquote>Through probabilistic modelling (sic) we formally verify an adversarial strategy that forces correct nodes to choose between safety and liveness even when f &lt; O( √n).</blockquote><p>If you develop on Avalanche, this should make you really nervous.  Avalanche claims to provide strong guarantees of safety and liveness as long as the attacker controls less than √n nodes. If those guarantees can really be broken, even in a contrived setup, then there's something wrong with the whitepaper. Remember, a single error contaminates the entire security proof. If the Ava whitepaper is 99% correct, it's 100% wrong.</p><p>I want to be clear: this doesn't necessarily mean that Ava is not secure. It means that we don't know whether Ava is secure or not. That's ok - research takes time. But it's not ok to build a production app on a system that might be fundamentally broken. Not if there's another option. </p><h2 id=\"tradeoffs-the-good-the-bad-and-the-downright-weird\">Tradeoffs: The Good, the Bad, and the Downright Weird</h2><p>This brings me to my final point. When you're designing a complex system, you're often forced to accept a tradeoff between two desirable properties. Like all blockchain projects, Ava chose a set of tradeoffs that its designers found compelling - it traded away some security guarantees to secure faster consensus. But here's the rub: <em>consensus was never the bottleneck to begin with</em>! The real bottleneck in modern blockchains is state growth. </p><p>In Ethereum, each read or write into the <em>database</em> incurs seven or eight random disk accesses (because the database uses a trie structure internally), and each<em> state access</em> incurs seven or eight random <em>database</em> accesses in the course of traversing the state trie. </p><p>For those of you who haven't spent time a lot of optimizing computer programs, that's what we in the business call \"really bad\". Random disk accesses are <strong><em>SLOW</em></strong>. In the time it takes to do a single random read, a CPU might be able perform 10,000 computations. This is why your full node can take a long time to sync even though the CPU is mostly idle. Sync times are typically dominated by disk accesses.</p><p>But remember how I said that each database access takes seven or eight writes, and each state access takes seven or eight database accesses? It turns out that both of those numbers grow with the size of a blockchain's state. Specifically, they're each about log(s) where S is the state size. So the time it takes to process a transaction grows with \\(log^2(s)\\). The next time Ethereum state size doubles, the time it takes to process a given transaction will increase by roughly 30%. This is why Ethereum keeps the block gas limit low - it needs to limit both block processing times and state growth. </p><p>As long everyone can process every candidate transaction, coming to consensus is relatively easy. There are already dozens of consensus protocols which offer fast finality. But if state size grows too quickly, processing transactions on commodity hardware becomes impossible. It's processing blocks that's the bottleneck, not coming to consensus. (And in case you were wondering, the Avalanche-go client relies on Ethereum's Geth - so all of these limitations really do apply to Ava.)</p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">The discussion was raised on the context of scaling, people saying that AVAX is better than Ethereum because it scales. I pointed out that it uses Geth under the hood. From the contextual perspective, you are changing the topic.</p>&mdash; Péter Szilágyi (karalabe.eth) (@peter_szilagyi) <a href=\"https://twitter.com/peter_szilagyi/status/1358654546646626304?ref_src=twsrc%5Etfw&ref=127.0.0.1\">February 8, 2021</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><p>So, to recap, Ava trades safety and/or liveness guarantees for speed of consensus, but consensus was never the bottleneck. That's like taking the engine out of a motorcycle to give it more cargo space. It's not illegal, just... not a good tradeoff. </p><h2 id=\"conclusion-building-on-ava-considered-harmful\">Conclusion: Building on Ava Considered Harmful</h2><p>Not everyone wants to build on Ethereum. That's good and healthy. We live in a multi-chain world. But please, for the love of all that is holy, stop treating Avalanche like a production system. Ava is a cool distributed systems research project, but it's not a good place to build mission critical applications. Its safety and liveness guarantees are much weaker than those of other projects, and it might have a fundamental consensus flaw. Besides, even if it works, it doesn't solve the scaling problem. </p><p><em>Author's Note: Did I get some things wrong? Almost certainly. If you find one, please reach out on Twitter. I'm happy to issue corrections or retractions as necessary. </em></p><h3 id=\"psto-the-folks-at-ava-labs\">P.S. - To the Folks at Ava Labs</h3><p>Like all blockchains, Ava has its share of evangelists  - and that's ok. But <strong><u><em>please</em></u></strong> be careful making claims like <a href=\"https://twitter.com/el33th4xor/status/1316471519640465411?ref=127.0.0.1\">this</a> on Twitter. Ava is <em>not</em> live with 49% honest nodes unless you define \"live\" as \"having non-zero - but arbitrarily small - probability of advancing\". At best, you're just going to confuse a lot of newcomers. Ava isn't another IOTA, but this kind of rhetoric is how you would turn it into one. </p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">I can talk about Avalanche. Avalanche has a parameterizable decision protocol that can withstand huge attackers, even 80%, with safety, but not liveness. It requires 51% honest nodes for liveness and safety together. And its bootstrap requires 51%.</p>&mdash; Emin Gün Sirer (@el33th4xor) <a href=\"https://twitter.com/el33th4xor/status/1316471519640465411?ref_src=twsrc%5Etfw&ref=127.0.0.1\">October 14, 2020</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><p></p><p></p>","url":"https://prestonevans.me/ava-bad/","canonical_url":null,"uuid":"5c7f305d-271f-489e-93f8-0f8442da067f","page":null,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"60ce0b5818c9b5df0d35a610","reading_time":6}},"pageContext":{"slug":"ava-bad"}},"staticQueryHashes":["1752937443","2358152166","2561578252","2731221146","4145280475"]}